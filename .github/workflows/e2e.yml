name: "End-to-end testing"
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      HUSKY: 0
      NUXT_CLOUDFLARE_R2_ACCESS_KEY: ${{ secrets.NUXT_CLOUDFLARE_R2_ACCESS_KEY }}
      NUXT_CLOUDFLARE_R2_ACCOUNT_ID: ${{ secrets.NUXT_CLOUDFLARE_R2_ACCOUNT_ID }}
      NUXT_CLOUDFLARE_R2_REGION: ${{ secrets.NUXT_CLOUDFLARE_R2_REGION }}
      NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${{ secrets.NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
      NUXT_GITHUB_SECRET: ${{ secrets.NUXT_GITHUB_SECRET }}

    steps:
      - name: Create env file
        run: |
          touch .env
          cat <<EOF >> .env
          NUXT_CLOUDFLARE_R2_ACCESS_KEY=$NUXT_CLOUDFLARE_R2_ACCESS_KEY
          NUXT_CLOUDFLARE_R2_ACCOUNT_ID=$NUXT_CLOUDFLARE_R2_ACCOUNT_ID
          NUXT_CLOUDFLARE_R2_REGION=$NUXT_CLOUDFLARE_R2_REGION
          NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY=$NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY
          NUXT_GITHUB_SECRET=$NUXT_GITHUB_SECRET
          EOF

      - uses: actions/checkout@v4.1.6

      - name: Enable Corepack
        run: corepack enable pnpm

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4.0.2
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Install Playwright Browsers
        run: pnpm playwright install --with-deps

      - name: Run E2E tests
        run: pnpm run test-e2e

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Login to Docker Hub
        if: ${{ github.actor != 'dependabot[bot]' && !failure() }}
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build and push Docker image
        if: ${{ github.actor != 'dependabot[bot]' && !failure() }}
        run: |
          docker build --build-arg="NODE_VERSION=21.5.0" -t portfolio-vue:latest --quiet --compress --target dev .
          docker tag portfolio-vue:latest "${DOCKER_USERNAME}/portfolio-vue:latest"
          docker push "${DOCKER_USERNAME}/portfolio-vue:latest"
