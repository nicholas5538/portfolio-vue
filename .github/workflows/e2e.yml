name: "End-to-end testing"
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      HUSKY: 0
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]

    steps:
      - name: Create env file
        run: |
          cat << EOF > .env
          NUXT_CLOUDFLARE_R2_ACCESS_KEY=${{ secrets.NUXT_CLOUDFLARE_R2_ACCESS_KEY }}
          NUXT_CLOUDFLARE_R2_ACCOUNT_ID=${{ secrets.NUXT_CLOUDFLARE_R2_ACCOUNT_ID }}
          NUXT_CLOUDFLARE_R2_REGION=${{ secrets.NUXT_CLOUDFLARE_R2_REGION }}
          NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY=${{ secrets.NUXT_CLOUDFLARE_R2_SECRET_ACCESS_KEY }}
          NUXT_GITHUB_SECRET=${{ secrets.NUXT_GITHUB_SECRET }}
          EOF

      - uses: actions/checkout@v4.2.2

      - name: Enable Corepack
        run: corepack enable pnpm

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4.1.0
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm list @playwright/test | grep @playwright | sed 's/.*test //')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4.1.2
        with:
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
          path: ~/.cache/ms-playwright

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: pnpm playwright install --with-deps

      - name: Run E2E tests
        run: pnpm playwright test --shard=${{ matrix.shardIndex}}/${{ matrix.shardTotal }}

      - name: Upload blob report to Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1
  merge-reports:
    if: ${{ !cancelled() }}
    needs: [playwright-tests]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Enable Corepack
        run: corepack enable pnpm

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - uses: actions/setup-node@v4.1.0
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: pnpm playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4.4.3
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 7

  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' && github.repository == 'nicholas5538/portfolio-vue' && !failure() }}
    needs: [merge-reports]

    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3d
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for Dependabot PRs
        if: contains(steps.metadata.outputs.dependency-names, 'my-dependency') && steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
